plugins {
    id 'java'
}

group = 'kr.huni'
version = '0.2.3-PRERELEASE'

jar {
    archiveFileName = "Baekjoon-java-starter.jar"
}

repositories {
    mavenCentral()
}

dependencies {
    // 웹 파서
    implementation 'org.jsoup:jsoup:1.17.1'

    // 롬복
    implementation 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // 로그
    implementation 'org.slf4j:slf4j-api:1.7.32'
    implementation 'org.slf4j:slf4j-simple:1.7.32'

    // JSON 파싱
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.1'

    // 테스팅
    testImplementation platform('org.junit:junit-bom:5.9.2')
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.0.0'
    testImplementation 'org.jsoup:jsoup:1.17.1'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
                'Main-Class': 'kr.huni.Main'
        )
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

task generateSources {
    def outputDir = file("$buildDir/../src/main/java/version")
    outputs.dir outputDir
    doFirst {
        if (!outputDir.exists()) {
            outputDir.mkdirs()
        }
        def versionClassContent = """
        package version;

        public class CurrentVersion {
            // This file is generated during the build process (build.gradle). Do not edit it manually!
            private static final String CURRENT_VERSION = "$project.version";

            public static String getCurrentVersion() {
                return CURRENT_VERSION;
            }
        }
        """
        new File(outputDir, "CurrentVersion.java").withWriter('UTF-8') { writer ->
            writer.write(versionClassContent)
        }
    }
}

compileJava.dependsOn generateSources
compileJava.source generateSources.outputs.files, sourceSets.main.java
